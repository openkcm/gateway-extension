{{- $podSecurityContext := fromYaml (include "gateway-extension.podsecuritycontext" .) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway-extension.fullname" . }}
  namespace: {{ include "gateway-extension.namespace" . }}
  labels:
    {{- include "gateway-extension.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gateway-extension.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gateway-extension.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gateway-extension.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.fsGroupFix (gt (int (dig "fsGroup" 0 $podSecurityContext)) 0) }}
        - name: fsgroupfix
          image: {{ template "gateway-extension.image" (tuple .Values.fsGroupFix.image $.Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.fsGroupFix.image.pullPolicy | quote }}
          command: [ "bash", "-c" ]
          args:
            - 'chown -R {{ printf "%v:%v" $podSecurityContext.runAsUser $podSecurityContext.fsGroup | quote }} {{ .Values.socket.path | dir }}'
          resources:
            {{- toYaml .Values.fsGroupFix.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.socket.volumeMountName }}
              mountPath: {{ .Values.socket.path | dir }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
        {{- end }}
        {{- with .Values.extraInitContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        {{- with .Values.extraContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: {{ include "gateway-extension.name" . }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ template "gateway-extension.image" (tuple .Values.image $.Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.image.command }}
          command: ["{{- toYaml . }}"]
          {{- end }}
          {{- with .Values.image.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- with .Values.extraEnvs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.extraEnvsFrom }}
          envFrom:
          {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ include "gateway-extension.name" . }}-config-volume
              mountPath: /etc/{{ include "gateway-extension.name" . }}
              readOnly: true
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: {{ include "gateway-extension.name" . }}-config-volume
          projected:
            sources:
              - configMap:
                  name: {{ include "gateway-extension.name" . }}-config
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
